AWSTemplateFormatVersion: '2010-09-09'
Description: 'Template for launching AWS Batch as Managed Compute Resource'
Resources:
  LzSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable communication between head node and EFS storage for pipelines"
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: '${VpcStack}-VPC'
      Tags:
        - Key: PipelineIdentifier
          Value: !Sub ${PipelineIdentifier}

  LzSecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      GroupId: !Ref efsSecurityGroup
      IpProtocol: tcp
      FromPort: 2049
      ToPort: 2049
      SourceSecurityGroupId: !Ref LzSecurityGroup

  efsSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable communication between head node and EFS storage for pipelines"
      VpcId: 
        Fn::ImportValue:
          !Sub '${VpcStack}-VPC'
      Tags:
        - Key: PipelineIdentifier
          Value: !Sub ${PipelineIdentifier}

  efsSecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      GroupId: !Ref LzSecurityGroup
      IpProtocol: tcp
      FromPort: 2049
      ToPort: 2049
      SourceSecurityGroupId: !Ref efsSecurityGroup

  PipelineFilesystem: #Create the default EFS configuration 
    Type: "AWS::EFS::FileSystem"
    Properties:
      Encrypted: true
      BackupPolicy:
        Status: ENABLED
      FileSystemTags:
        - Key: PipelineIdentifier
          Value: !Ref PipelineIdentifier
 
  PipelineMountTargetA:
    Type: "AWS::EFS::MountTarget"
    Properties:
      FileSystemId: !Ref PipelineFilesystem
      SecurityGroups:
        - !Ref efsSecurityGroup #Default Security group which allows inbound NFS communication
      SubnetId: 
        Fn::ImportValue:
          !Sub '${VpcStack}-PrivateSubnet-Zone1'
  #CANT TAG FOR RESOURCE COSTING

  PipelineMountTargetB:
    Type: "AWS::EFS::MountTarget"
    Properties:
      FileSystemId: !Ref PipelineFilesystem
      SecurityGroups:
        - !Ref efsSecurityGroup #Default Security group which allows inbound NFS communication
      SubnetId: 
        Fn::ImportValue:
          !Sub '${VpcStack}-PrivateSubnet-Zone2'
  #CANT TAG FOR RESOURCE COSTING

  ComputeEnvironment:
    Type: "AWS::Batch::ComputeEnvironment"
    Properties: 
      ComputeEnvironmentName: "Pipeline-CE"
      ComputeResources: 
        AllocationStrategy: "BEST_FIT"
        DesiredvCpus: 0
        InstanceTypes:
          - "optimal"
        InstanceRole: !Ref InstanceRole
        MaxvCpus: 250
        MinvCpus: 0
        SecurityGroupIds:
          - !Ref LzSecurityGroup #the LZ security group
        Subnets:
          - Fn::ImportValue:
              !Sub '${VpcStack}-PrivateSubnet-Zone1'
          - Fn::ImportValue:
              !Sub '${VpcStack}-PrivateSubnet-Zone2'
        Tags:
           PipelineIdentifier: !Ref PipelineIdentifier
        Type: "EC2"
        UpdateToLatestImageVersion: True
      ServiceRole: !Ref ServiceRole
      State: "Enabled"
      Tags: 
         PipelineIdentifier: !Ref PipelineIdentifier
      Type: "Managed"

  JobQueue:
    Type: "AWS::Batch::JobQueue"
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ComputeEnvironment
      JobQueueName: "Default-Q"
      Priority: 0
      State: "ENABLED"
      Tags:
         PipelineIdentifier: !Ref PipelineIdentifier

Outputs:
  LandingZoneSecurityGroup:
    Description: The security group for landing zones to be placed in
    Value: !Ref LzSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-LzSecurityGroup"
  Queue:
    Description: JobQueue Arn for configuring the AWS job-submission profile
    Value: !Ref JobQueue
  PipelineFilesystem:
    Description: The common filesystem for executing snakemake workflows on
    Value: !Ref PipelineFilesystem
    Export:
      Name: !Sub "${AWS::StackName}-PipelineFilesystem"

Mappings:
  AWSInstanceType2Arch:
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    m1.large:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.small:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m3.2xlarge:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    t1.micro:
      Arch: PV64
    t2.large:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.small:
      Arch: HVM64
  AWSInstanceType2NATArch:
    c1.medium:
      Arch: NATPV64
    c1.xlarge:
      Arch: NATPV64
    c3.2xlarge:
      Arch: NATHVM64
    c3.4xlarge:
      Arch: NATHVM64
    c3.8xlarge:
      Arch: NATHVM64
    c3.large:
      Arch: NATHVM64
    c3.xlarge:
      Arch: NATHVM64
    c4.2xlarge:
      Arch: NATHVM64
    c4.4xlarge:
      Arch: NATHVM64
    c4.8xlarge:
      Arch: NATHVM64
    c4.large:
      Arch: NATHVM64
    c4.xlarge:
      Arch: NATHVM64
    cc2.8xlarge:
      Arch: NATHVM64
    cr1.8xlarge:
      Arch: NATHVM64
    d2.2xlarge:
      Arch: NATHVM64
    d2.4xlarge:
      Arch: NATHVM64
    d2.8xlarge:
      Arch: NATHVM64
    d2.xlarge:
      Arch: NATHVM64
    g2.2xlarge:
      Arch: NATHVMG2
    g2.8xlarge:
      Arch: NATHVMG2
    hi1.4xlarge:
      Arch: NATHVM64
    hs1.8xlarge:
      Arch: NATHVM64
    i2.2xlarge:
      Arch: NATHVM64
    i2.4xlarge:
      Arch: NATHVM64
    i2.8xlarge:
      Arch: NATHVM64
    i2.xlarge:
      Arch: NATHVM64
    m1.large:
      Arch: NATPV64
    m1.medium:
      Arch: NATPV64
    m1.small:
      Arch: NATPV64
    m1.xlarge:
      Arch: NATPV64
    m2.2xlarge:
      Arch: NATPV64
    m2.4xlarge:
      Arch: NATPV64
    m2.xlarge:
      Arch: NATPV64
    m3.2xlarge:
      Arch: NATHVM64
    m3.large:
      Arch: NATHVM64
    m3.medium:
      Arch: NATHVM64
    m3.xlarge:
      Arch: NATHVM64
    m4.10xlarge:
      Arch: NATHVM64
    m4.2xlarge:
      Arch: NATHVM64
    m4.4xlarge:
      Arch: NATHVM64
    m4.large:
      Arch: NATHVM64
    m4.xlarge:
      Arch: NATHVM64
    r3.2xlarge:
      Arch: NATHVM64
    r3.4xlarge:
      Arch: NATHVM64
    r3.8xlarge:
      Arch: NATHVM64
    r3.large:
      Arch: NATHVM64
    r3.xlarge:
      Arch: NATHVM64
    t1.micro:
      Arch: NATPV64
    t2.large:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.nano:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-383c1956
      HVMG2: ami-08e5c166
      PV64: ami-393c1957
    ap-northeast-2:
      HVM64: ami-249b554a
      HVMG2: NOT_SUPPORTED
      PV64: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-c9b572aa
      HVMG2: ami-5a15d239
      PV64: ami-34bd7a57
    ap-southeast-2:
      HVM64: ami-48d38c2b
      HVMG2: ami-0c1a446f
      PV64: ami-ced887ad
    ca-central-1:
      HVM64: ami-0b18956f
      HVMG2: NOT_SUPPORTED
      PV64: NOT_SUPPORTED
    cn-north-1:
      HVM64: ami-43a36a2e
      HVMG2: NOT_SUPPORTED
      PV64: ami-18ac6575
    eu-central-1:
      HVM64: ami-bc5b48d0
      HVMG2: ami-ba1a09d6
      PV64: ami-794a5915
    eu-west-1:
      HVM64: ami-bff32ccc
      HVMG2: ami-83fd23f0
      PV64: ami-95e33ce6
    sa-east-1:
      HVM64: ami-6817af04
      HVMG2: NOT_SUPPORTED
      PV64: ami-7d15ad11
    us-east-1:
      HVM64: ami-60b6c60a
      HVMG2: ami-e998ea83
      PV64: ami-5fb8c835
    us-west-1:
      HVM64: ami-d5ea86b5
      HVMG2: ami-943956f4
      PV64: ami-56ea8636
    us-west-2:
      HVM64: ami-f0091d91
      HVMG2: ami-315f4850
      PV64: ami-d93622b8

Parameters:
  VpcStack:
    Description: The VPC stack that which the batch compute will run on
    Type: String

  DockerImage:
    Description: The docker image for running the pipeline in
    Type: String
    Default: alpine:latest

  JobName:
    Description: The jobname configured in amzn.yaml
    Type: String
    Default: Default-Job

  PipelineIdentifier:
    Description: The name of the project being tagged
    Type: String

  InstanceRole:
    Description: Instance role for EC2 to be managed by batch, for autoscaling etc.
    Type: String

  ServiceRole:
    Description: Service role for AWS Batch
    Type: String

  InstanceType:
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.small
    Description: WebServer EC2 instance type
    Type: String
